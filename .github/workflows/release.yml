# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Run release build from tag

on:
  push:
    tags:
      - '*'

jobs:
  release:
    environment: CIRelease
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: git fetch --all --tag
      - name: Create .gradle dir
        run: mkdir -p $HOME/.gradle
      - id: install-secret-key
        name: Install gpg secret key
        env:
          SIGNINGFILE: ${{ secrets.SIGNINGFILE }}
        run: |
          cat <(echo -e "${{ secrets.SIGNINGFILE }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
      - id: export-gpg-file
        name: Export gpg file
        env:
          SIGNINGKEYID: ${{ secrets.SIGNINGKEYID }}
          SIGNINGPASSWORD: ${{ secrets.SIGNINGPASSWORD }}
        run: |
          gpg --batch --passphrase="$SIGNINGPASSWORD" --pinentry-mode loopback --export-secret-keys $SIGNINGKEYID > $HOME/.gradle/secrets.gpg
      - name: Create gradle sproperties
        env:
          APIKEY: ${{ secrets.APIKEY }}
          APISECRET: ${{ secrets.APISECRET }}
          SIGNINGKEYID: ${{ secrets.SIGNINGKEYID }}
          SIGNINGPASSWORD: ${{ secrets.SIGNINGPASSWORD }}
          SONATYPEPASSWORD: ${{ secrets.SONATYPEPASSWORD }}
          SONATYPEUSER: ${{ secrets.SONATYPEUSER }}
        run: echo -e "gradle.publish.key=$APIKEY\ngradle.publish.secret=$APISECRET\nsigning.keyId=$SIGNINGKEYID\nsigning.password=$SIGNINGPASSWORD\nsigning.secretKeyRingFile=$HOME/.gradle/secrets.gpg\nsonatypeUsername=$SONATYPEUSER\nsonatypePassword=$SONATYPEPASSWORD" > $HOME/.gradle/gradle.properties
      - name: Run gradle release
        env:
          JAVA_OPTS: "-Xmx1024M -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=512M"
          GRADLE_OPTS: "-Dorg.gradle.daemon=true"
        run: ./gradlew -PrunOnCI=true test build :publishIntershopMvnPublicationToMavenRepository :publishPlugins -s
      - name: Post Build
        run: rm -f $HOME/.gradle/gradle.properties
